<?xml version="1.0" encoding="UTF-8"?>
<!-- I_SiteSensor1.xml -->
<implementation>
	<functions>
		-- -------------------------------------------------------------------------------------------------------------------------
		-- SiteSensor
		-- https://github.com/toggledbits/SiteSensor
		-- Patrick Rigney, patrick@toggledbits.com
		-- -------------------------------------------------------------------------------------------------------------------------
		function startupSiteSensor(dev)
			luup.log("SiteSensor Plugin START-UP!")
			SiteSensor = require("L_SiteSensor1")
			siteSensorRunQuery = SiteSensor.runQuery
			siteSensorWatch = SiteSensor.watchHandler
			siteSensorRequestHandler = SiteSensor.requestHandler
			luup.register_handler("siteSensorRequestHandler", "SiteSensor")
			return SiteSensor.init(dev)
		end
	</functions>
	<startup>startupSiteSensor</startup>
	<actionList>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>SetEnabled</name>
			<run>
				return SiteSensor.actionSetEnabled( lul_device, lul_settings.newEnabledValue )
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>GetInterval</name>
			<run>
				return -- what we do here doesn't matter, luup uses the relatedStateVariable directly
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>SetInterval</name>
			<run>
				local newInterval = lul_settings.newTargetValue
				if newInterval ~= nil then newInterval = tonumber(newInterval, 10) end
				if newInterval ~= nil and newInterval >= 60 then
					luup.variable_set("urn:toggledbits-com:serviceId:SiteSensor1", "Interval", newInterval, lul_device)
					return true
				end
				return false
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>GetRequestURL</name>
			<run>
				return -- what we do here doesn't matter, luup uses the relatedStateVariable directly
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>SetRequestURL</name>
			<run>
				local newRequestURL = lul_settings.newTargetValue or ""
				luup.variable_set("urn:toggledbits-com:serviceId:SiteSensor1", "RequestURL", newRequestURL, lul_device)
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>LogRequests</name>
			<run>
				local enabled = ( tonumber( lul_settings.Enabled ) or 0 ) ~= 0
				SiteSensor.requestLogging( lul_device, enabled )
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>DoRequest</name>
			<run>
				SiteSensor.actionDoRequest( lul_device )
			</run>
		</action>

		<action>
			<serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
			<name>SetArmed</name>
			<run>
				local armed = tonumber(lul_settings.newArmedValue or "0", 10)
				if armed ~= 0 then
					SiteSensor.arm(lul_device)
				else
					SiteSensor.disarm(lul_device)
				end
				return true
			</run>
		</action>
		<action>
			<serviceId>urn:toggledbits-com:serviceId:SiteSensor1</serviceId>
			<name>SetDebug</name>
			<run>
				SiteSensor.actionSetDebug( lul_device, lul_settings.debug )
			</run>
		</action>
	</actionList>
</implementation>
